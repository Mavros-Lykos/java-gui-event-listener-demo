name: Build Platform Executables

on:
  push:
    branches: [main, master]
    tags:
      - "v*"
  pull_request:
    branches: [main, master]
  workflow_dispatch:

env:
  JAVA_VERSION: "21"
  APP_NAME: "EventListenersDemo"
  APP_VERSION: "1.0.0"
  VENDOR: "Charaka Hashan"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        jre-included: [true, false]
        include:
          - os: ubuntu-latest
            os-type: linux
            installer-type: deb
            executable-ext: ""
            icon-path: "assets/icon.png"
            
          - os: windows-latest
            os-type: windows
            installer-type: exe
            executable-ext: ".exe"
            icon-path: "assets/icon.ico"
            
          - os: macos-latest
            os-type: macos
            installer-type: dmg
            executable-ext: ""
            icon-path: "assets/icon.icns"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"

      - name: Compile Java files
        shell: bash
        run: |
          mkdir -p out
          javac -cp "lib/*" -d out src/javaGuiEventListenersDemo/*.java

      - name: Create manifest file
        shell: bash
        run: |
          cat > manifest.txt << EOF
          Main-Class: javaGuiEventListenersDemo.CompleteEventHandlersApp
          Implementation-Title: ${{ env.APP_NAME }}
          Implementation-Version: ${{ env.APP_VERSION }}
          Implementation-Vendor: ${{ env.VENDOR }}
          EOF

      - name: Create FAT JAR with dependencies
        shell: bash
        run: |
          mkdir -p jar-temp
          cd jar-temp
          
          # Extract FlatLaf and other dependencies, remove signatures
          for lib in ../lib/*.jar; do
            jar xf "$lib"
          done
          rm -rf META-INF/*.SF META-INF/*.DSA META-INF/*.RSA
          
          # Copy compiled classes
          cp -r ../out/* .
          
          # Create fat JAR
          jar cfm ../${{ env.APP_NAME }}.jar ../manifest.txt *
          cd ..
          ls -lh ${{ env.APP_NAME }}.jar

      - name: Set variant suffix
        shell: bash
        run: |
          if [ "${{ matrix.jre-included }}" = "true" ]; then
            echo "VARIANT_SUFFIX=with-jre" >> $GITHUB_ENV
            echo "JRE_FLAG=--add-modules java.base" >> $GITHUB_ENV
          else
            echo "VARIANT_SUFFIX=without-jre" >> $GITHUB_ENV
            echo "JRE_FLAG=" >> $GITHUB_ENV
          fi

      - name: Build Windows installer (with/without JRE)
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          INSTALL_DIR="C:\\Program Files\\${{ env.APP_NAME }}"
          
          if [ "${{ matrix.jre-included }}" = "true" ]; then
            jpackage \
              --input . \
              --name ${{ env.APP_NAME }} \
              --main-jar ${{ env.APP_NAME }}.jar \
              --type exe \
              --dest dist \
              --app-version ${{ env.APP_VERSION }} \
              --vendor "${{ env.VENDOR }}" \
              --description "Java GUI Event Listeners Demo - Complete" \
              --win-console \
              --win-dir-chooser \
              --win-menu \
              --win-menu-group "${{ env.APP_NAME }}" \
              --win-per-user-install \
              --icon ${{ matrix.icon-path }}
          else
            # Without JRE: user must have Java 8+ installed
            jpackage \
              --input . \
              --name ${{ env.APP_NAME }}-NoJRE \
              --main-jar ${{ env.APP_NAME }}.jar \
              --type exe \
              --dest dist \
              --app-version ${{ env.APP_VERSION }} \
              --vendor "${{ env.VENDOR }}" \
              --description "Java GUI Event Listeners Demo (requires Java 8+)" \
              --win-console \
              --win-dir-chooser \
              --win-menu \
              --win-menu-group "${{ env.APP_NAME }}" \
              --win-per-user-install \
              --icon ${{ matrix.icon-path }} \
              --runtime-image "SKIP_RUNTIME"
          fi

      - name: Build Linux installer (with/without JRE)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          if [ "${{ matrix.jre-included }}" = "true" ]; then
            jpackage \
              --input . \
              --name ${{ env.APP_NAME }} \
              --main-jar ${{ env.APP_NAME }}.jar \
              --type deb \
              --dest dist \
              --app-version ${{ env.APP_VERSION }} \
              --vendor "${{ env.VENDOR }}" \
              --description "Java GUI Event Listeners Demo - Complete" \
              --linux-menu-group "Development" \
              --icon ${{ matrix.icon-path }}
          else
            jpackage \
              --input . \
              --name ${{ env.APP_NAME }}-nojre \
              --main-jar ${{ env.APP_NAME }}.jar \
              --type deb \
              --dest dist \
              --app-version ${{ env.APP_VERSION }} \
              --vendor "${{ env.VENDOR }}" \
              --description "Java GUI Event Listeners Demo (requires Java 8+)" \
              --linux-menu-group "Development" \
              --icon ${{ matrix.icon-path }}
          fi

      - name: Build macOS installer (with/without JRE)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          if [ "${{ matrix.jre-included }}" = "true" ]; then
            jpackage \
              --input . \
              --name ${{ env.APP_NAME }} \
              --main-jar ${{ env.APP_NAME }}.jar \
              --type dmg \
              --dest dist \
              --app-version ${{ env.APP_VERSION }} \
              --vendor "${{ env.VENDOR }}" \
              --description "Java GUI Event Listeners Demo - Complete" \
              --icon ${{ matrix.icon-path }} \
              --mac-package-identifier com.charakahashan.eventlistenersdemo
          else
            jpackage \
              --input . \
              --name ${{ env.APP_NAME }}-NoJRE \
              --main-jar ${{ env.APP_NAME }}.jar \
              --type dmg \
              --dest dist \
              --app-version ${{ env.APP_VERSION }} \
              --vendor "${{ env.VENDOR }}" \
              --description "Java GUI Event Listeners Demo (requires Java 8+)" \
              --icon ${{ matrix.icon-path }} \
              --mac-package-identifier com.charakahashan.eventlistenersdemo
          fi

      - name: Generate checksums
        shell: bash
        run: |
          cd dist
          sha256sum * > SHA256SUMS.txt
          sha512sum * > SHA512SUMS.txt
          cd ..

      - name: List dist contents (debug)
        shell: bash
        run: |
          echo "Contents of dist directory:"
          ls -lah dist/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-${{ matrix.os-type }}-${{ matrix.jre-included && 'with-jre' || 'without-jre' }}
          path: |
            dist/*
            !dist/**/*.txt
          retention-days: 30

      - name: Upload checksums artifact
        uses: actions/upload-artifact@v4
        with:
          name: checksums-${{ matrix.os-type }}
          path: dist/SHA*.txt
          retention-days: 30

      - name: Create Release (on tag push)
        if: startsWith(github.ref, 'refs/tags/v') && matrix.jre-included == true
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
          body: |
            # ${{ env.APP_NAME }} ${{ env.APP_VERSION }}
            
            ## Installation Instructions
            
            ### Windows
            - **With JRE**: Double-click the `.exe` installer → installs to `C:\Program Files\EventListenersDemo`
            - **Without JRE**: Requires Java 8+ already installed on your system
            
            ### Linux
            - **With JRE**: `sudo apt install ./EventListenersDemo-*.deb`
            - **Without JRE**: Install Java 8+ first, then install the package
            
            ### macOS
            - **With JRE**: Open `.dmg` → Drag app to Applications folder
            - **Without JRE**: Requires Java 8+ installed via Homebrew or official JDK installer
            
            ## What's New
            - Complete event handler documentation
            - 25+ event listeners demonstrated
            
            ## Checksums
            See `SHA256SUMS.txt` and `SHA512SUMS.txt` for file verification.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
